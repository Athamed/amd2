# Generated by Django 3.2.13 on 2022-06-16 18:18

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('polls', '0004_language_alter_book_options_book_language'),
    ]

    operations = [
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=100)),
                ('date_of_foundation', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['company_name'],
            },
        ),
        migrations.CreateModel(
            name='GameGenre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a game genre (e.g. Adventure)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='GameMode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter a game genre (e.g. SinglePlayer)', max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('date_of_release', models.DateField(blank=True, null=True)),
                ('summary', models.TextField(help_text='Enter a brief description of the game', max_length=1000)),
                ('developer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='polls.developer')),
                ('genre', models.ManyToManyField(help_text='Select a genre for this game', to='polls.GameGenre')),
                ('mode', models.ManyToManyField(help_text='Select which game mode is available', to='polls.GameMode')),
            ],
        ),
    ]
